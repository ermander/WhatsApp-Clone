{"version":3,"sources":["db/firebase.js","components/SidebarChat.jsx","state/stateProvider.js","components/Sidebar.jsx","components/Chat.jsx","reducer/reducer.js","components/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","addNewChat","name","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","console","log","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","onChange","e","target","preventDefault","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14fd200e.chunk.js","sourcesContent":["import firebase from \"firebase\"\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBvevVn-4Ha_e7x9oGJyZYmaYhXirq0o_M\",\r\n  authDomain: \"whatsapp-clone-57069.firebaseapp.com\",\r\n  projectId: \"whatsapp-clone-57069\",\r\n  storageBucket: \"whatsapp-clone-57069.appspot.com\",\r\n  messagingSenderId: \"283725340829\",\r\n  appId: \"1:283725340829:web:9574aebb165e5bf0bc3474\",\r\n  measurementId: \"G-279JY41F0K\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\nconst db = firebaseApp.firestore()\r\nconst auth = firebase.auth()\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport { auth, provider }\r\nexport default db\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport db from \"../db/firebase\";\r\nimport \"../styles/SidebarChat.css\";\r\n\r\nfunction SidebarChat({ id, addNewChat, name }) {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [messages, setMessages] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      db.collection(\"rooms\")\r\n        .doc(id)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  });\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, [id]);\r\n\r\n  const createChat = () => {\r\n    const roomName = prompt(\"Please enter the chat room name\");\r\n\r\n    if (roomName) {\r\n      db.collection(\"rooms\").add({\r\n        name: roomName,\r\n      });\r\n    }\r\n  };\r\n\r\n  return !addNewChat ? (\r\n    <Link to={`/room/${id}`}>\r\n      <div className=\"sidebarChat\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className=\"sidebarChat__info\">\r\n          <h2>{name}</h2>\r\n          <p>{messages[0]?.message}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  ) : (\r\n    <div onClick={createChat} className=\"sidebarChat\">\r\n      <h2>Add new chat</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarChat;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport db from \"../db/firebase\";\r\nimport \"../styles/Sidebar.css\";\r\nimport { useStateValue } from \"../state/stateProvider\";\r\nfunction Sidebar() {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [{user}, dispatch] = useStateValue()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection(\"rooms\").onSnapshot((snapshot) =>\r\n      setRooms(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    );\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <Avatar src={user?.photoURL}/>\r\n        <div className=\"sidebar__headerRight\">\r\n          <IconButton>\r\n            <DonutLargeIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ChatIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__search\">\r\n        <div className=\"sidebar__searchContainer\">\r\n          <SearchOutlined />\r\n          <input placeholder=\"Search or start a new chat\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__chats\">\r\n        <SidebarChat addNewChat />\r\n        {rooms.map((room) => (\r\n          <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport db from \"../db/firebase\";\r\nimport \"../styles/Chat.css\";\r\nimport { SearchOutlined, AttachFile, MoreVert } from \"@material-ui/icons\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport firebase from \"firebase\";\r\nimport { useStateValue } from \"../state/stateProvider\";\r\n\r\nfunction Chat() {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [input, setInput] = useState(\"\");\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    console.log(roomId);\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    console.log(roomId);\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, [roomId]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"You typed >> \", input);\r\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n      message: input,\r\n      name: user.displayName,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__header\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className=\"chat__headerInfo\">\r\n          <h3>{roomName}</h3>\r\n          <p>\r\n            last seen{\" \"}\r\n            {\r\n              new Date(\r\n                messages[messages.length -1]?. \r\n                timestamp?.toDate()\r\n              ).toUTCString()\r\n            }\r\n          </p>\r\n        </div>\r\n        <div className=\"chat_headerRight\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"chat__body\">\r\n        {messages.map((message) => (\r\n          <p\r\n            className={`chat__message ${\r\n              message.name === user.displayName && \"chat__reciever\"\r\n            }`}\r\n          >\r\n            <span className=\"chat__name\">{message.name}</span>\r\n            {message.message}\r\n            <span className=\"chat__timeStamp\">\r\n              {new Date(message.timestamp?.toDate()).toUTCString()}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat__footer\">\r\n        <InsertEmoticonIcon />\r\n        <form>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            type=\"text\"\r\n          />\r\n          <button onClick={sendMessage}>Send a message</button>\r\n        </form>\r\n        <MicIcon />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","export const initialState = {\r\n  user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n  SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport \"../styles/Login.css\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { auth, provider } from \"../db/firebase\";\r\nimport { useStateValue } from \"../state/stateProvider\";\r\nimport { actionTypes } from \"../reducer/reducer\";\r\n\r\nfunction Login() {\r\n  const [{}, dispatch] = useStateValue();\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        dispatch({\r\n          type: actionTypes.SET_USER,\r\n          user: result.user,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__container\">\r\n        <img\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/1196px-WhatsApp.svg.png\"\r\n          alt=\"\"\r\n        />\r\n        <div className=\"login__text\">\r\n          <h1>Sign in to WhatsApp</h1>\r\n        </div>\r\n\r\n        <Button onClick={signIn}>Sign In With Google</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import \"./styles/App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Sidebar from \"./components/Sidebar\";\nimport Chat from \"./components/Chat\";\nimport Login from \"./components/Login\";\nimport React, { useState } from \"react\";\nimport { useStateValue } from \"./state/stateProvider\";\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app__body\">\n          <Router>\n            <Sidebar />\n            <Switch>\n              <Route path=\"/room/:roomId\">\n                <Chat />\n              </Route>\n              <Route path=\"/\">\n                <Chat />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport reducer, { initialState } from \"./reducer/reducer\";\nimport { StateProvider } from \"./state/stateProvider\"\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}